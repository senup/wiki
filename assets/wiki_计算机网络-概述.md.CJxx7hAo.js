import{_ as a,o as e,c as i,R as l}from"./chunks/framework.7FlijoJG.js";const u=JSON.parse('{"title":"计算机网络知识学习前言","description":"","frontmatter":{},"headers":[],"relativePath":"wiki/计算机网络-概述.md","filePath":"wiki/计算机网络-概述.md","lastUpdated":1700579497000}'),t={name:"wiki/计算机网络-概述.md"},o=l('<h1 id="计算机网络知识学习前言" tabindex="-1">计算机网络知识学习前言 <a class="header-anchor" href="#计算机网络知识学习前言" aria-label="Permalink to &quot;计算机网络知识学习前言&quot;">​</a></h1><blockquote><p>计算机网络属于每个开发工程师都需要掌握的计算机基础知识之一，目前很多大公司在面试应届毕业生的时候都必问计网相关知识点，其中典型的有“TCP三次握手和四次挥手”等经典面试题。因此掌握计算机网络知识是必不可少的。但是我们并不需要过于深入的了解计算机网络知识，更深层次的理论知识是网络工程师需要学习了解的。作为开发工程师，计算机网络中需要了解并掌握的常见知识点已经总结如下。</p></blockquote><h1 id="计算机网络概述" tabindex="-1">计算机网络概述 <a class="header-anchor" href="#计算机网络概述" aria-label="Permalink to &quot;计算机网络概述&quot;">​</a></h1><h2 id="网络的网络" tabindex="-1">网络的网络 <a class="header-anchor" href="#网络的网络" aria-label="Permalink to &quot;网络的网络&quot;">​</a></h2><p>网络把主机连接起来，而互联网是把多种不同的网络连接起来，因此互联网是网络的网络。</p><h2 id="isp" tabindex="-1">ISP <a class="header-anchor" href="#isp" aria-label="Permalink to &quot;ISP&quot;">​</a></h2><p>互联网服务提供商 ISP 可以从互联网管理机构获得许多 IP 地址，同时拥有通信线路以及路由器等联网设备，个人或机构向 ISP 缴纳一定的费用就可以接入互联网。</p><p>目前的互联网是一种多层次 ISP 结构，ISP 根据覆盖面积的大小分为第一层 ISP、区域 ISP 和接入 ISP。互联网交换点 IXP 允许两个 ISP 直接相连而不用经过第三个 ISP。</p><h2 id="主机之间的通信方式" tabindex="-1">主机之间的通信方式 <a class="header-anchor" href="#主机之间的通信方式" aria-label="Permalink to &quot;主机之间的通信方式&quot;">​</a></h2><p>客户-服务器（C/S）：客户是服务的请求方，服务器是服务的提供方。</p><p>对等（P2P）：不区分客户和服务器。</p><p>电路交换与分组交换</p><ol><li><p>电路交换 电路交换用于电话通信系统，两个用户要通信之前需要建立一条专用的物理链路，并且在整个通信过程中始终占用该链路。由于通信的过程中不可能一直在使用传输线路，因此电路交换对线路的利用率很低，往往不到 10%。</p></li><li><p>分组交换 每个分组都有首部和尾部，包含了源地址和目的地址等控制信息，在同一个传输线路上同时传输多个分组互相不会影响，因此在同一条传输线路上允许同时传输多个分组，也就是说分组交换不需要占用传输线路。</p></li></ol><p>在一个邮局通信系统中，邮局收到一份邮件之后，先存储下来，然后把相同目的地的邮件一起转发到下一个目的地，这个过程就是存储转发过程，分组交换也使用了存储转发过程。</p><h2 id="时延" tabindex="-1">时延 <a class="header-anchor" href="#时延" aria-label="Permalink to &quot;时延&quot;">​</a></h2><p>总时延 = 排队时延 + 处理时延 + 传输时延 + 传播时延</p><ol><li><p>排队时延 分组在路由器的输入队列和输出队列中排队等待的时间，取决于网络当前的通信量。</p></li><li><p>处理时延 主机或路由器收到分组时进行处理所需要的时间，例如分析首部、从分组中提取数据、进行差错检验或查找适当的路由等。</p></li><li><p>传输时延 主机或路由器传输数据帧所需要的时间。</p></li></ol><p>其中 l 表示数据帧的长度，v 表示传输速率。</p><ol start="4"><li>传播时延 电磁波在信道中传播所需要花费的时间，电磁波传播的速度接近光速。</li></ol><p>其中 l 表示信道长度，v 表示电磁波在信道上的传播速度。</p><h2 id="计算机网络体系结构" tabindex="-1">计算机网络体系结构 <a class="header-anchor" href="#计算机网络体系结构" aria-label="Permalink to &quot;计算机网络体系结构&quot;">​</a></h2><h3 id="五层协议" tabindex="-1">五层协议 <a class="header-anchor" href="#五层协议" aria-label="Permalink to &quot;五层协议&quot;">​</a></h3><ul><li><p>应用层 ：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等协议。数据单位为报文。</p></li><li><p>传输层 ：为进程提供通用数据传输服务。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议 TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议 UDP，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供及时性服务。</p></li><li><p>网络层 ：为主机提供数据传输服务。而传输层协议是为主机中的进程提供数据传输服务。网络层把传输层传递下来的报文段或者用户数据报封装成分组。</p></li><li><p>数据链路层 ：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。</p></li><li><p>物理层 ：考虑的是怎样在传输媒体上传输数据比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异。</p></li></ul><h3 id="osi" tabindex="-1">OSI <a class="header-anchor" href="#osi" aria-label="Permalink to &quot;OSI&quot;">​</a></h3><p>其中表示层和会话层用途如下：</p><ul><li>表示层 ：数据压缩、加密以及数据描述，这使得应用程序不必关心在各台主机中数据内部格式不同的问题。</li><li>会话层 ：建立及管理会话。</li></ul><p>五层协议没有表示层和会话层，而是将这些功能留给应用程序开发者处理。</p><h3 id="tcp-ip" tabindex="-1">TCP/IP <a class="header-anchor" href="#tcp-ip" aria-label="Permalink to &quot;TCP/IP&quot;">​</a></h3><p>它只有四层，相当于五层协议中数据链路层和物理层合并为网络接口层。</p><p>TCP/IP 体系结构不严格遵循 OSI 分层概念，应用层可能会直接使用 IP 层或者网络接口层。</p><h3 id="数据在各层之间的传递过程" tabindex="-1">数据在各层之间的传递过程 <a class="header-anchor" href="#数据在各层之间的传递过程" aria-label="Permalink to &quot;数据在各层之间的传递过程&quot;">​</a></h3><p>在向下的过程中，需要添加下层协议所需要的首部或者尾部，而在向上的过程中不断拆开首部和尾部。</p><p>路由器只有下面三层协议，因为路由器位于网络核心中，不需要为进程或者应用程序提供服务，因此也就不需要传输层和应用层。</p><p>数据在计算机网络中传输过程如下：</p>',34),r=[o];function p(h,n,s,d,c,P){return e(),i("div",null,r)}const b=a(t,[["render",p]]);export{u as __pageData,b as default};
