import{_ as s,o as n,c as a,R as o}from"./chunks/framework.7FlijoJG.js";const b=JSON.parse('{"title":"SpringBoot简介","description":"","frontmatter":{},"headers":[],"relativePath":"interview/springboot-helloworld.md","filePath":"interview/springboot-helloworld.md","lastUpdated":1700618398000}'),p={name:"interview/springboot-helloworld.md"},l=o(`<h1 id="springboot简介" tabindex="-1">SpringBoot简介 <a class="header-anchor" href="#springboot简介" aria-label="Permalink to &quot;SpringBoot简介&quot;">​</a></h1><h2 id="_1、springboot简介" tabindex="-1">1、SpringBoot简介 <a class="header-anchor" href="#_1、springboot简介" aria-label="Permalink to &quot;1、SpringBoot简介&quot;">​</a></h2><p>概括来说，SpringBoot自身的特点：</p><ul><li>简化Spring应用开发的一个框架</li><li>整个Spring技术栈的一个大整合</li><li>J2EE开发的一站式解决方案</li></ul><h2 id="_2、微服务" tabindex="-1">2、微服务 <a class="header-anchor" href="#_2、微服务" aria-label="Permalink to &quot;2、微服务&quot;">​</a></h2><p>最早在2014年由martin fowler提出微服务的概念。微服务指的一种架构风格（服务微化），一个应用应该是一组小型服务，并且服务之间可以通过HTTP的方式进行通信。</p><p>单体应用：All in one</p><p>微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元。</p><p>微服务原文文档：<a href="https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa" target="_blank" rel="noreferrer">https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa</a></p><h2 id="_3、环境准备" tabindex="-1">3、环境准备 <a class="header-anchor" href="#_3、环境准备" aria-label="Permalink to &quot;3、环境准备&quot;">​</a></h2><ul><li>JDK8</li><li>Maven 3.6.0</li><li>IDEA 2018</li><li>SpringBoot 1.5.21.RELEASE</li></ul><p>ps：在做笔记的时候SpringBoot已经更新到2.1.5版本，SpringBoot 2.x很多地方相较于1.5.21版本都做了修改，但是整个框架的思想结构并没有太多的改变。</p><h1 id="springboot-helloworld" tabindex="-1">SpringBoot-HelloWorld <a class="header-anchor" href="#springboot-helloworld" aria-label="Permalink to &quot;SpringBoot-HelloWorld&quot;">​</a></h1><p>任务目标：浏览器发送hello请求，服务器接受请求并处理，然后响应出“Hello World”字符串。</p><h2 id="创建工程" tabindex="-1">创建工程 <a class="header-anchor" href="#创建工程" aria-label="Permalink to &quot;创建工程&quot;">​</a></h2><h3 id="创建springboot项目方法一" tabindex="-1">创建SpringBoot项目方法一 <a class="header-anchor" href="#创建springboot项目方法一" aria-label="Permalink to &quot;创建SpringBoot项目方法一&quot;">​</a></h3><p>打开IDEA，选择<code>new Project</code>，选择<code>Spring Initializr</code>，如下：</p><p>点击<code>Next</code>，然后如下图所示：</p><p>然后继续Next，选中<code>Web</code>模块，并选择<code>SpringBoot</code>的版本为<code>1.5.21</code>。</p><p>然后一路<code>Next</code>下去，第一个HelloWorld工程就创建好了。</p><h3 id="创建springboot项目方法二" tabindex="-1">创建SpringBoot项目方法二 <a class="header-anchor" href="#创建springboot项目方法二" aria-label="Permalink to &quot;创建SpringBoot项目方法二&quot;">​</a></h3><p>由于第一种方式由SpringBoot官方网站<code>https://start.spring.io</code>引导创建项目经常会失去链接，所以很多时候会采用第二种方式进行创建SpringBoot项目。</p><p>首先创建Maven项目：</p><p>然后点击<code>Next</code>并且点击<code>Finish</code>完成创建Maven项目即可。</p><p>然后在<code>pom.xml</code>文件中手动添加SpringBoot依赖：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">parent</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-parent&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.5.21.RELEASE&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">parent</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">parent</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-parent&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.5.21.RELEASE&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">parent</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>其中注意SpringBoot是作为父工程项目引入的，web模块是作为依赖引入的。</p><p>然后我们需要手动创建如下文件：</p><p>其中<code>SpringBoothelloWorldApplication.java</code>中代码如下：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> cn.bestzuo.springboot.helloworld;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.boot.SpringApplication;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.boot.autoconfigure.SpringBootApplication;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootApplication</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SpringbootHelloworldApplication</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        SpringApplication.</span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">(SpringbootHelloworldApplication.class, args);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> cn.bestzuo.springboot.helloworld;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.boot.SpringApplication;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.boot.autoconfigure.SpringBootApplication;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootApplication</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SpringbootHelloworldApplication</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        SpringApplication.</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(SpringbootHelloworldApplication.class, args);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>这个主类是启动SpringBoot的主程序类，也是SpringBoot应用启动的入口，当然这个类内部做了什么事我们先不管，我们继续编写Controller类来实现HelloWorld。</p><h2 id="实现helloworld" tabindex="-1">实现HelloWorld <a class="header-anchor" href="#实现helloworld" aria-label="Permalink to &quot;实现HelloWorld&quot;">​</a></h2><p>创建类<code>HelloWorld</code>如下：</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> cn.bestzuo.springboot.helloworld.controller;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.stereotype.Controller;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.web.bind.annotation.RequestMapping;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.web.bind.annotation.ResponseBody;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Controller</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HelloController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">ResponseBody</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">RequestMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/hello&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">hello</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello World&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> cn.bestzuo.springboot.helloworld.controller;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.stereotype.Controller;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.web.bind.annotation.RequestMapping;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.web.bind.annotation.ResponseBody;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Controller</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HelloController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">ResponseBody</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">RequestMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/hello&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">hello</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello World&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>可以看到这跟SpringMVC基本是一模一样的，这是因为SpringBoot内部集成了SpringMVC的原因。</p><p>然后我们运行<code>SpringBootHelloWorldApplication.java</code>主类，我们可以看到在控制台打印了很多日志输出。</p><p>可以看到在最后面提示Tomcat运行在8080端口，然后打开浏览器输出<code>localhost:8080/hello</code>，可以看到成功输出<code>Hello World</code>了！</p><p>可能你觉得奇怪，为什么根本就没有配置Tomcat，而控制台却显示了Tomcat信息呢？然后你马上应该想到了，这肯定是SpringBoot内部已经集成好了Tomcat，所以不再需要手动配置了。</p><p>那么你肯定想到了，如此高度集成Tomcat插件，那么如果想要修改Tomcat信息，比如端口号等等，该怎么去修改呢？这个问题其实不是问题，SpringBoot已经帮我们准备好了，上面创建的<code>application.yml</code>文件就是这个SpringBoot的全局配置文件，Tomcat相关配置信息完全可以在这个配置文件中解决。</p><h1 id="springboot-helloworld探析" tabindex="-1">SpringBoot-HelloWorld探析 <a class="header-anchor" href="#springboot-helloworld探析" aria-label="Permalink to &quot;SpringBoot-HelloWorld探析&quot;">​</a></h1><p>刚刚完成上面的HelloWorld实验，一方面会因为SpringBoot能够如此迅速搭建web项目而感到惊叹，另外一方面你肯定也很想知道这是怎么做到的。下面我们就来一一探析。</p><h2 id="pom文件" tabindex="-1">pom文件 <a class="header-anchor" href="#pom文件" aria-label="Permalink to &quot;pom文件&quot;">​</a></h2><p>首先我们从pom文件开始</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">parent</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring‐boot‐starter‐parent&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.5.21.RELEASE&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">parent</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">他的父项目是</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">parent</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring‐boot‐dependencies&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.5.21.RELEASE&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">relativePath</span><span style="color:#E1E4E8;">&gt;../../spring‐boot‐dependencies&lt;/</span><span style="color:#85E89D;">relativePath</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">parent</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">他来真正管理Spring Boot应用里面的所有依赖版本；</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">parent</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring‐boot‐starter‐parent&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.5.21.RELEASE&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">parent</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">他的父项目是</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">parent</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring‐boot‐dependencies&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.5.21.RELEASE&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">relativePath</span><span style="color:#24292E;">&gt;../../spring‐boot‐dependencies&lt;/</span><span style="color:#22863A;">relativePath</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">parent</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">他来真正管理Spring Boot应用里面的所有依赖版本；</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>对了，这个SpringBoot的版本号就相当于是SpringBoot的版本仲裁中心，内部解决了所有Spring可能用到的依赖造成的冲突，所以在SpringBoot项目中导入依赖默认是不需要写版本号的，当然了，没有在dependencies里面管理的依赖自然需要声明版本号。</p><p>然后我们再来看一看web启动模块：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>我们可以打开这个依赖包看一下：</p><p>然后就发现了这个玩意的本质，原来在这个依赖包中，已经默认帮我们导入了Spring的web和webmvc模块，并且还有相关的jackson依赖以及日志包等等，甚至还有一个神奇的spring-boot-starter-tomcat启动器依赖，这就不难理解为什么上面我们只导入了一个依赖却能轻松的使用这么多组件。原来都是SpringBoot帮我们一站式解决了这些依赖。</p><p>而细心的人应该已经发现上面还有一个<code>Spring-boot-starter</code>，翻译过来就是SpringBoot启动器，这个依赖就是SpringBoot的核心依赖，Spring Boot将所有的功能场景都抽取出来，做成一个个的starters（启动器），只需要在项目里面引入这些starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器 。</p><h2 id="主程序类" tabindex="-1">主程序类 <a class="header-anchor" href="#主程序类" aria-label="Permalink to &quot;主程序类&quot;">​</a></h2><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootApplication</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SpringbootHelloworldApplication</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        SpringApplication.</span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">(SpringbootHelloworldApplication.class, args);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootApplication</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SpringbootHelloworldApplication</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        SpringApplication.</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(SpringbootHelloworldApplication.class, args);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>然后回到主程序类中，我们首先会关注@SpringBootApplication这个注解，这个注解的外在含义比较容易理解，就是Spring Boot应用标注在某个类上从而说明这个类是SpringBoot的主配置类，SpringBoot就可以运行这个类的main方法来启动SpringBoot应用。</p><p>那么这个注解的内在含义呢？我们可以点开这个注解类一探究竟。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Target</span><span style="color:#E1E4E8;">(ElementType.TYPE)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Retention</span><span style="color:#E1E4E8;">(RetentionPolicy.RUNTIME)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Documented</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Inherited</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootConfiguration</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">EnableAutoConfiguration</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ComponentScan</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">excludeFilters</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		@</span><span style="color:#F97583;">Filter</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> FilterType.CUSTOM, </span><span style="color:#79B8FF;">classes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> TypeExcludeFilter.class),</span></span>
<span class="line"><span style="color:#E1E4E8;">		@</span><span style="color:#F97583;">Filter</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> FilterType.CUSTOM,</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#79B8FF;">classes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> AutoConfigurationExcludeFilter.class) })</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SpringBootApplication</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	@</span><span style="color:#F97583;">AliasFor</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">annotation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> EnableAutoConfiguration.class, </span><span style="color:#79B8FF;">attribute</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;exclude&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	Class</span><span style="color:#F97583;">&lt;?&gt;</span><span style="color:#E1E4E8;">[] </span><span style="color:#B392F0;">exclude</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	@</span><span style="color:#F97583;">AliasFor</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">annotation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> EnableAutoConfiguration.class, </span><span style="color:#79B8FF;">attribute</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;excludeName&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#B392F0;">excludeName</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	@</span><span style="color:#F97583;">AliasFor</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">annotation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ComponentScan.class, </span><span style="color:#79B8FF;">attribute</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;basePackages&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#B392F0;">scanBasePackages</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	@</span><span style="color:#F97583;">AliasFor</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">annotation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ComponentScan.class, </span><span style="color:#79B8FF;">attribute</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;basePackageClasses&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	Class</span><span style="color:#F97583;">&lt;?&gt;</span><span style="color:#E1E4E8;">[] </span><span style="color:#B392F0;">scanBasePackageClasses</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Target</span><span style="color:#24292E;">(ElementType.TYPE)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Retention</span><span style="color:#24292E;">(RetentionPolicy.RUNTIME)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Documented</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Inherited</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootConfiguration</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableAutoConfiguration</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ComponentScan</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">excludeFilters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		@</span><span style="color:#D73A49;">Filter</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FilterType.CUSTOM, </span><span style="color:#005CC5;">classes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TypeExcludeFilter.class),</span></span>
<span class="line"><span style="color:#24292E;">		@</span><span style="color:#D73A49;">Filter</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FilterType.CUSTOM,</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#005CC5;">classes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> AutoConfigurationExcludeFilter.class) })</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SpringBootApplication</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	@</span><span style="color:#D73A49;">AliasFor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">annotation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> EnableAutoConfiguration.class, </span><span style="color:#005CC5;">attribute</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;exclude&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	Class</span><span style="color:#D73A49;">&lt;?&gt;</span><span style="color:#24292E;">[] </span><span style="color:#6F42C1;">exclude</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	@</span><span style="color:#D73A49;">AliasFor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">annotation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> EnableAutoConfiguration.class, </span><span style="color:#005CC5;">attribute</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;excludeName&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#6F42C1;">excludeName</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	@</span><span style="color:#D73A49;">AliasFor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">annotation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ComponentScan.class, </span><span style="color:#005CC5;">attribute</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;basePackages&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#6F42C1;">scanBasePackages</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	@</span><span style="color:#D73A49;">AliasFor</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">annotation</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ComponentScan.class, </span><span style="color:#005CC5;">attribute</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;basePackageClasses&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	Class</span><span style="color:#D73A49;">&lt;?&gt;</span><span style="color:#24292E;">[] </span><span style="color:#6F42C1;">scanBasePackageClasses</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>那么首先我们需要知道上面这几个注解的含义：</p><ul><li><code>@SpringBootConfifiguration</code>：标注在某个类上，表示这是一个SpringBoot的配置类；</li><li><code>@Configuration</code>：表示这是一个配置类，相当于配置文件；</li><li><code>@EnableAutoConfiguration</code>：开启自动配置功能，该会注解告诉SpringBoot开启自动配置功能，这样自动配置才能生效；</li><li><code>@AutoConfigurationPackage</code>：自动配置包</li><li><code>@Import(AutoConfigurationPackages.Registrar.class)</code>： Spring的底层注解@Import，给容器中导入一个组件；导入的组件由 AutoConfigurationPackages.Registrar.class； 将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；</li><li><code>EnableAutoConfigurationImportSelector</code>：导入哪些组件的选择器； 将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中； 会给容器中导入非常多的自动配置类（xxxAutoConfifiguration）；就是给容器中导入这个场景需要的所有组件， 并配置好这些组件；</li></ul><p>那么同样你应该想到了，上面这些注解中，最关键的一个应该是<code>@EnableAutoConfiguration</code>注解，这个注解帮我们自动配置了很多东西，那么具体配置了什么呢？我们可以扒开源码一看究竟，我们打开依赖中的spring-boot-autoconfigure:1.5.21.RELEASE源码包，如下图所示：</p><p>然后打开<code>META-INF/spring.factories</code>文件，这个文件中内容非常多：</p><div class="language-properties vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># Initializers</span></span>
<span class="line"><span style="color:#F97583;">org.springframework.context.ApplicationContextInitializer</span><span style="color:#E1E4E8;">=\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Application Listeners</span></span>
<span class="line"><span style="color:#F97583;">org.springframework.context.ApplicationListener</span><span style="color:#E1E4E8;">=\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.BackgroundPreinitializer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Auto Configuration Import Listeners</span></span>
<span class="line"><span style="color:#F97583;">org.springframework.boot.autoconfigure.AutoConfigurationImportListener</span><span style="color:#E1E4E8;">=\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Auto Configuration Import Filters</span></span>
<span class="line"><span style="color:#F97583;">org.springframework.boot.autoconfigure.AutoConfigurationImportFilter</span><span style="color:#E1E4E8;">=\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.condition.OnClassCondition</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Auto Configure</span></span>
<span class="line"><span style="color:#F97583;">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span><span style="color:#E1E4E8;">=\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.social.FacebookAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.social.TwitterAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.MultipartAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.WebClientAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Failure analyzers</span></span>
<span class="line"><span style="color:#F97583;">org.springframework.boot.diagnostics.FailureAnalyzer</span><span style="color:#E1E4E8;">=\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Template availability providers</span></span>
<span class="line"><span style="color:#F97583;">org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider</span><span style="color:#E1E4E8;">=\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">org.springframework.boot.autoconfigure.web.JspTemplateAvailabilityProvider</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># Initializers</span></span>
<span class="line"><span style="color:#D73A49;">org.springframework.context.ApplicationContextInitializer</span><span style="color:#24292E;">=\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Application Listeners</span></span>
<span class="line"><span style="color:#D73A49;">org.springframework.context.ApplicationListener</span><span style="color:#24292E;">=\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.BackgroundPreinitializer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Auto Configuration Import Listeners</span></span>
<span class="line"><span style="color:#D73A49;">org.springframework.boot.autoconfigure.AutoConfigurationImportListener</span><span style="color:#24292E;">=\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Auto Configuration Import Filters</span></span>
<span class="line"><span style="color:#D73A49;">org.springframework.boot.autoconfigure.AutoConfigurationImportFilter</span><span style="color:#24292E;">=\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.condition.OnClassCondition</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Auto Configure</span></span>
<span class="line"><span style="color:#D73A49;">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span><span style="color:#24292E;">=\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.social.FacebookAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.social.TwitterAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.MultipartAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.WebClientAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Failure analyzers</span></span>
<span class="line"><span style="color:#D73A49;">org.springframework.boot.diagnostics.FailureAnalyzer</span><span style="color:#24292E;">=\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Template availability providers</span></span>
<span class="line"><span style="color:#D73A49;">org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider</span><span style="color:#24292E;">=\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider,\\</span></span>
<span class="line"><span style="color:#24292E;">org.springframework.boot.autoconfigure.web.JspTemplateAvailabilityProvider</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br></div></div><p>Spring Boot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；以前我们需要自己配置的东西，自动配置类都帮我们配置好，这就是SpringBoot为什么会如此方便的原因。</p><p>J2EE的整体整合解决方案和自动配置都在spring-boot-autoconfifigure-1.5.21.RELEASE.jar；</p><h1 id="application-yml配置文件" tabindex="-1">application.yml配置文件 <a class="header-anchor" href="#application-yml配置文件" aria-label="Permalink to &quot;application.yml配置文件&quot;">​</a></h1><p>SpringBoot使用一个全局的配置文件，配置文件名是固定的；</p><ul><li>application.properties</li><li>application.yml</li></ul><p>配置文件的作用：修改SpringBoot自动配置的默认值；SpringBoot在底层都给我们自动配置好；</p><p>YAML（YAML Ain&#39;t Markup Language）</p><p>YAML A Markup Language：是一个标记语言</p><p>YAML isn&#39;t Markup Language：不是一个标记语言；</p><p>标记语言：</p><p>以前的配置文件；大多都使用的是 xxxx.xml文件；</p><p>YAML：以数据为中心，比json、xml等更适合做配置文件；</p><p>YAML：配置例子</p><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8081</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">server</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8081</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>XML：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">&gt;8081&lt;/</span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">server</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">port</span><span style="color:#24292E;">&gt;8081&lt;/</span><span style="color:#22863A;">port</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">server</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>关于yml语法这里就不再多说，可以自行参考yml语法官方文档。</p><h2 id="profile" tabindex="-1">profile <a class="header-anchor" href="#profile" aria-label="Permalink to &quot;profile&quot;">​</a></h2><p>在实际开发中，会有多种环境，比如实际生产环境、开发环境、测试环境，每种环境下的配置都不会完全相同，如果每次都要修改配置文件过于麻烦，因此SpringBoot引入了profile，可以通过切换profile来达到切换环境的目的。</p><p>我们在主配置文件编写的时候，文件名可以是<code>application-{profile}.properties/yml </code></p><p>默认使用<code>application.properties</code>的配置；</p><p>yml文件同时也支持多文档块的写法：</p><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8081</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#85E89D;">profiles</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#85E89D;">active</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">prod</span></span>
<span class="line"><span style="color:#9ECBFF;">‐‐‐</span></span>
<span class="line"><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8083</span></span>
<span class="line"><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#85E89D;">profiles</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">dev</span></span>
<span class="line"><span style="color:#9ECBFF;">‐‐‐</span></span>
<span class="line"><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8084</span></span>
<span class="line"><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#85E89D;">profiles</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">prod</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#指定属于哪个环境</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">server</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8081</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#22863A;">profiles</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#22863A;">active</span><span style="color:#24292E;">: </span><span style="color:#032F62;">prod</span></span>
<span class="line"><span style="color:#032F62;">‐‐‐</span></span>
<span class="line"><span style="color:#22863A;">server</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8083</span></span>
<span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#22863A;">profiles</span><span style="color:#24292E;">: </span><span style="color:#032F62;">dev</span></span>
<span class="line"><span style="color:#032F62;">‐‐‐</span></span>
<span class="line"><span style="color:#22863A;">server</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8084</span></span>
<span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#22863A;">profiles</span><span style="color:#24292E;">: </span><span style="color:#032F62;">prod</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#指定属于哪个环境</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>那么如何切换呢？</p><ul><li>在配置文件中指定 spring.profiles.active=dev</li><li>命令行： java -jar spring-boot-02-confifig-0.0.1-SNAPSHOT.jar --spring.profifiles.active=dev； 可以直接在测试的时候，配置传入命令行参数</li><li>虚拟机参数； -Dspring.profifiles.active=dev</li></ul><p>当然实际中用的最多的还是第一种方式，直接指定即可。</p>`,86),r=[l];function e(t,i,c,E,u,g){return n(),a("div",null,r)}const f=s(p,[["render",e]]);export{b as __pageData,f as default};
