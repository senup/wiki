import{_ as f,o as l,c as e,R as r}from"./chunks/framework._4g7boG9.js";const p=JSON.parse('{"title":"剑指offer题解笔记","description":"","frontmatter":{},"headers":[],"relativePath":"wiki/剑指offer.md","filePath":"wiki/剑指offer.md","lastUpdated":1700574435000}'),a={name:"wiki/剑指offer.md"},i=r('<h1 id="剑指offer题解笔记" tabindex="-1">剑指offer题解笔记 <a class="header-anchor" href="#剑指offer题解笔记" aria-label="Permalink to &quot;剑指offer题解笔记&quot;">​</a></h1><ul><li><a href="./offer-3-9.html#3-数组中重复的数字">3. 数组中重复的数字</a></li><li><a href="./offer-3-9.html#4-二维数组中的查找">4. 二维数组中的查找</a></li><li><a href="./offer-3-9.html#5-替换空格">5. 替换空格</a></li><li><a href="./offer-3-9.html#6-从尾到头打印链表">6. 从尾到头打印链表</a></li><li><a href="./offer-3-9.html#7-重建二叉树">7. 重建二叉树</a></li><li><a href="./offer-3-9.html#8-二叉树的下一个结点">8. 二叉树的下一个结点</a></li><li><a href="./offer-3-9.html#9-用两个栈实现队列">9. 用两个栈实现队列</a></li><li><a href="./offer-10-19.html#101-斐波那契数列">10.1 斐波那契数列</a></li><li><a href="./offer-10-19.html#102-矩形覆盖">10.2 矩形覆盖</a></li><li><a href="./offer-10-19.html#103-跳台阶">10.3 跳台阶</a></li><li><a href="./offer-10-19.html#104-变态跳台阶">10.4 变态跳台阶</a></li><li><a href="./offer-10-19.html#11-旋转数组的最小数字">11. 旋转数组的最小数字</a></li><li><a href="./offer-10-19.html#12-矩阵中的路径">12. 矩阵中的路径</a></li><li><a href="./offer-10-19.html#13-机器人的运动范围">13. 机器人的运动范围</a></li><li><a href="./offer-10-19.html#14-剪绳子">14. 剪绳子</a></li><li><a href="./offer-10-19.html#15-二进制中-1-的个数">15. 二进制中 1 的个数</a></li><li><a href="./offer-10-19.html#16-数值的整数次方">16. 数值的整数次方</a></li><li><a href="./offer-10-19.html#17-打印从-1-到最大的-n-位数">17. 打印从 1 到最大的 n 位数</a></li><li><a href="./offer-10-19.html#181-在-o1-时间内删除链表节点">18.1 在 O(1) 时间内删除链表节点</a></li><li><a href="./offer-10-19.html#182-删除链表中重复的结点">18.2 删除链表中重复的结点</a></li><li><a href="./offer-10-19.html#19-正则表达式匹配">19. 正则表达式匹配</a></li><li><a href="./offer-20-29.html#20-表示数值的字符串">20. 表示数值的字符串</a></li><li><a href="./offer-20-29.html#21-调整数组顺序使奇数位于偶数前面">21. 调整数组顺序使奇数位于偶数前面</a></li><li><a href="./offer-20-29.html#22-链表中倒数第-k-个结点">22. 链表中倒数第 K 个结点</a></li><li><a href="./offer-20-29.html#23-链表中环的入口结点">23. 链表中环的入口结点</a></li><li><a href="./offer-20-29.html#24-反转链表">24. 反转链表</a></li><li><a href="./offer-20-29.html#25-合并两个排序的链表">25. 合并两个排序的链表</a></li><li><a href="./offer-20-29.html#26-树的子结构">26. 树的子结构</a></li><li><a href="./offer-20-29.html#27-二叉树的镜像">27. 二叉树的镜像</a></li><li><a href="./offer-20-29.html#28-对称的二叉树">28. 对称的二叉树</a></li><li><a href="./offer-20-29.html#29-顺时针打印矩阵">29. 顺时针打印矩阵</a></li><li><a href="./offer-30-39.html#30-包含-min-函数的栈">30. 包含 min 函数的栈</a></li><li><a href="./offer-30-39.html#31-栈的压入弹出序列">31. 栈的压入、弹出序列</a></li><li><a href="./offer-30-39.html#321-从上往下打印二叉树">32.1 从上往下打印二叉树</a></li><li><a href="./offer-30-39.html#322-把二叉树打印成多行">32.2 把二叉树打印成多行</a></li><li><a href="./offer-30-39.html#323-按之字形顺序打印二叉树">32.3 按之字形顺序打印二叉树</a></li><li><a href="./offer-30-39.html#33-二叉搜索树的后序遍历序列">33. 二叉搜索树的后序遍历序列</a></li><li><a href="./offer-30-39.html#34-二叉树中和为某一值的路径">34. 二叉树中和为某一值的路径</a></li><li><a href="./offer-30-39.html#35-复杂链表的复制">35. 复杂链表的复制</a></li><li><a href="./offer-30-39.html#36-二叉搜索树与双向链表">36. 二叉搜索树与双向链表</a></li><li><a href="./offer-30-39.html#37-序列化二叉树">37. 序列化二叉树</a></li><li><a href="./offer-30-39.html#38-字符串的排列">38. 字符串的排列</a></li><li><a href="./offer-30-39.html#39-数组中出现次数超过一半的数字">39. 数组中出现次数超过一半的数字</a></li><li><a href="./offer-40-49.html#40-最小的-k-个数">40. 最小的 K 个数</a></li><li><a href="./offer-40-49.html#411-数据流中的中位数">41.1 数据流中的中位数</a></li><li><a href="./offer-40-49.html#412-字符流中第一个不重复的字符">41.2 字符流中第一个不重复的字符</a></li><li><a href="./offer-40-49.html#42-连续子数组的最大和">42. 连续子数组的最大和</a></li><li><a href="./offer-40-49.html#43-从-1-到-n-整数中-1-出现的次数">43. 从 1 到 n 整数中 1 出现的次数</a></li><li><a href="./offer-40-49.html#44-数字序列中的某一位数字">44. 数字序列中的某一位数字</a></li><li><a href="./offer-40-49.html#45-把数组排成最小的数">45. 把数组排成最小的数</a></li><li><a href="./offer-40-49.html#46-把数字翻译成字符串">46. 把数字翻译成字符串</a></li><li><a href="./offer-40-49.html#47-礼物的最大价值">47. 礼物的最大价值</a></li><li><a href="./offer-40-49.html#48-最长不含重复字符的子字符串">48. 最长不含重复字符的子字符串</a></li><li><a href="./offer-40-49.html#49-丑数">49. 丑数</a></li><li><a href="./offer-50-59.html#50-第一个只出现一次的字符位置">50. 第一个只出现一次的字符位置</a></li><li><a href="./offer-50-59.html#51-数组中的逆序对">51. 数组中的逆序对</a></li><li><a href="./offer-50-59.html#52-两个链表的第一个公共结点">52. 两个链表的第一个公共结点</a></li><li><a href="./offer-50-59.html#53-数字在排序数组中出现的次数">53. 数字在排序数组中出现的次数</a></li><li><a href="./offer-50-59.html#54-二叉查找树的第-k-个结点">54. 二叉查找树的第 K 个结点</a></li><li><a href="./offer-50-59.html#551-二叉树的深度">55.1 二叉树的深度</a></li><li><a href="./offer-50-59.html#552-平衡二叉树">55.2 平衡二叉树</a></li><li><a href="./offer-50-59.html#56-数组中只出现一次的数字">56. 数组中只出现一次的数字</a></li><li><a href="./offer-50-59.html#571-和为-s-的两个数字">57.1 和为 S 的两个数字</a></li><li><a href="./offer-50-59.html#572-和为-s-的连续正数序列">57.2 和为 S 的连续正数序列</a></li><li><a href="./offer-50-59.html#581-翻转单词顺序列">58.1 翻转单词顺序列</a></li><li><a href="./offer-50-59.html#582-左旋转字符串">58.2 左旋转字符串</a></li><li><a href="./offer-50-59.html#59-滑动窗口的最大值">59. 滑动窗口的最大值</a></li><li><a href="./offer-60-68.html#60-n-个骰子的点数">60. n 个骰子的点数</a></li><li><a href="./offer-60-68.html#61-扑克牌顺子">61. 扑克牌顺子</a></li><li><a href="./offer-60-68.html#62-圆圈中最后剩下的数">62. 圆圈中最后剩下的数</a></li><li><a href="./offer-60-68.html#63-股票的最大利润">63. 股票的最大利润</a></li><li><a href="./offer-60-68.html#64-求-123n">64. 求 1+2+3+...+n</a></li><li><a href="./offer-60-68.html#65-不用加减乘除做加法">65. 不用加减乘除做加法</a></li><li><a href="./offer-60-68.html#66-构建乘积数组">66. 构建乘积数组</a></li><li><a href="./offer-60-68.html#67-把字符串转换成整数">67. 把字符串转换成整数</a></li><li><a href="./offer-60-68.html#68-树中两个节点的最低公共祖先">68. 树中两个节点的最低公共祖先</a></li></ul><h1 id="剑指offer刷题指南" tabindex="-1">剑指offer刷题指南 <a class="header-anchor" href="#剑指offer刷题指南" aria-label="Permalink to &quot;剑指offer刷题指南&quot;">​</a></h1><p>剑指 offer 可以看作是 LeetCode 的精简版，国内互联网公司很多笔试面试题会直接从剑指offer上面出，但是剑指offer上面题目难度各异，如果你准备时间较短，并且有一定算法基础，那么剑指offer是一个很好的选择。 不管是剑指offer还是LeetCode，其实都比较偏向于面试算法题，往往要求在五到十分钟内做出来，但是笔试算法题的时间安排通常在半个小时到一个小时，所以难度会大一些，而且笔试算法题往往会给一大段场景描述，所以需要先理解题目意思，然后再琢磨选择合适的数据结构和算法进行解决。但是笔试算法题也是在剑指offer和LeetCode的基础上增大难度的。</p>',4),h=[i];function o(t,m,n,_,s,d){return l(),e("div",null,h)}const u=f(a,[["render",o]]);export{p as __pageData,u as default};
