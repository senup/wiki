import{_ as l,o as t,c as a,k as e}from"./chunks/framework.7FlijoJG.js";const m=JSON.parse('{"title":"限流器设计","description":"","frontmatter":{"title":"限流器设计","date":"2024-01-08T11:19:34.000Z","Tags":["tech"],"Draft":true,"HideInList":false,"Feature":null,"IsTop":false},"headers":[],"relativePath":"系统设计/限流器设计.md","filePath":"系统设计/限流器设计.md","lastUpdated":1711296414000}'),s={name:"系统设计/限流器设计.md"},n=e("ul",null,[e("li",null,"实现 HandlerInterceptor接口，重写 prehandle接口"),e("li",null,"解析配置的 Apollo 限流规则，将其反序列化后放入静态变量中"),e("li",null,"获取本次的 API 和供应商 ID，将其组织成一个 Redis 的 key"),e("li",null,"判断是否匹配规则，如果没有匹配就放行"),e("li",null,"如果规则匹配到了，那么需要判断五秒内的滑动窗口总量是多少，使用zset 的命令删除五秒以外的再计算这个 key 的总量"),e("li",null,"如果总量大于 qps*时间，说明需要限流，在 response 中返回错误码和配置好的错误信息；"),e("li",null,"如果小于，则将key 和时间戳放进去")],-1),o=[n];function r(i,c,d,_,p,u){return t(),a("div",null,o)}const h=l(s,[["render",r]]);export{m as __pageData,h as default};
